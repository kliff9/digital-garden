{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/isomorphic-git",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"mailmap\"), mdx(\"h3\", null, \"reference\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://git-scm.com/docs/gitmailmap\"\n  }, \"mailmap\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://git-scm.com/docs/pretty-formats\"\n  }, \"pretty formats\"))), mdx(\"p\", null, \"plumbing commands that use the mailmap file: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git diff-tree \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git rev-list\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git cat-file\")), mdx(\"p\", null, \"porcelain commands that use the mailmap file: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git log \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git shortlog \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git show \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git blame \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git check-mailmap\")), mdx(\"p\", null, \"files that store mailmap information:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \".mailmap \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git config: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mailmap.file\"), \", \\xA0\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mailmap.blob\"))), mdx(\"h2\", null, \"todo - kliff\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"create a test repository that contains\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"commits from multiple emails\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a mailmap mapping those emails to a single canonical email\"))), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"push the test repository to github\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"write a node program to read the objects in the repository and display the author info\")), mdx(\"h2\", null, \"todo - moussa\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"read \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://git-scm.com/book/en/v2/Git-Internals-Plumbing-and-Porcelain\"\n  }, \"git internal structure\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"pick an issue to work on\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#mailmap","title":"mailmap","items":[{"url":"#reference","title":"reference"}]},{"url":"#todo---kliff","title":"todo - kliff"},{"url":"#todo---moussa","title":"todo - moussa"}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[isomorphic-git]]","referrer":{"parent":{"id":"d9da7411-9a18-52f6-bc84-7a9169af2d17","fields":{"slug":"/readme","title":"readme"}}}}]},"fields":{"slug":"/isomorphic-git","title":"isomorphic-git"}}},"pageContext":{"id":"6856b5c8-90b4-560b-b8ef-8ef2f2815485","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}