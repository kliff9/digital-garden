{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/foam-doc/docs/features/note-templates",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Note Templates\"), mdx(\"p\", null, \"You can create notes from templates by running the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Foam: Create New Note from Template\"), \" command and follow the instructions.\"), mdx(\"p\", null, \"To create a template, just add regular \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".md\"), \" files in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".foam/templates\"), \" (create the directory if necessary).\"), mdx(\"p\", null, \"Templates can use all the variables available in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables\"\n  }, \"VS Code Snippets\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#note-templates","title":"Note Templates"}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [ ] You can create [[note-templates]] for things like book reviews, people, daily notes (coming soon), and more!","referrer":{"parent":{"id":"aa4f1773-c110-5570-a73c-0b756f1f150a","fields":{"slug":"/foam-doc/index","title":"Index"}}}}]},"fields":{"slug":"/foam-doc/docs/features/note-templates","title":"Note Templates"}}},"pageContext":{"id":"2a282981-8c29-585c-b895-aea3941ab88d","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}